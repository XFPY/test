#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX_PRODUCT 5

typedef struct {
    char nama[50];
    int harga;
    int jumlah;
    float diskon;
    int total;
} Produk;

Produk produk[MAX_PRODUCT] = {
    {"Buku Tulis", 5000, 0, 0, 0},
    {"Pensil", 2000, 0, 0, 0},
    {"Penghapus", 1000, 0, 0, 0},
    {"Penggaris", 1000, 0, 0, 0},
    {"Bujur Sangkar", 500, 0, 0, 0}
};

void clear_screen() {
    #ifdef _WIN32
        system("cls");
    #else
        system("clear");
    #endif
}

void tampilkan_menu() {
    printf("===============================================================================\n");
    printf("                        SELAMAT DATANG DI TOKO SKENSA                         \n");
    printf("===============================================================================\n");
    printf("| %-3s | %-20s | %-17s     |\n", "No", "Nama Barang", "Harga");
    printf("-------------------------------------------------------------------------------\n");
    for (int i = 0; i < MAX_PRODUCT; i++) {
        printf("| %-3d | %-20s | Rp. %-17d |\n", i + 1, produk[i].nama, produk[i].harga);
    }
    printf("===============================================================================\n");
    printf(" 99. Struk Pembayaran\n");
    printf(" 55. Reset Transaksi\n");
    printf(" 00. Keluar\n");
    printf("===============================================================================\n");
}

float hitung_diskon(int jumlah) {
    if (jumlah > 5) return 0.15;
    else if (jumlah > 3) return 0.10;
    return 0.0;
}

void urutkan_produk(Produk *produk, int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (produk[j].jumlah > produk[i].jumlah) {
                Produk temp = produk[i];
                produk[i] = produk[j];
                produk[j] = temp;
            }
        }
    }
}

void buat_id_pesanan(char *id) {
    srand(time(NULL));
    int angka_acak = rand() % 900000 + 100000;
    sprintf(id, "%d", angka_acak);
}

void reset_data(Produk *produk, int n) {
    for (int i = 0; i < n; i++) {
        produk[i].jumlah = 0;
        produk[i].diskon = 0;
        produk[i].total = 0;
    }
    printf("\n>> Data berhasil direset!\n");
}

void cetak_struk_ke_file(char *id_pesanan, Produk produk[], int total_harga, int total_diskon, int tagihan, int bayar) {
    time_t t = time(NULL);
    struct tm *tm_info = localtime(&t);
    char filename[100];
    strftime(filename, sizeof(filename), "%Y-%m-%d_%H-%M-%S.txt", tm_info);

    FILE *file = fopen(filename, "w");
    if (!file) {
        printf("Gagal membuat file struk!\n");
        return;
    }

    fprintf(file, "===============================================================================\n");
    fprintf(file, "|                             Toko SKENSA                                     |\n");
    fprintf(file, "|             Jl. HOS Cokroaminoto No. 84, Denpasar                           |\n");
    fprintf(file, "|                                BALI                                         |\n");
    fprintf(file, "|                         Telp: 0816285791                                    |\n");
    fprintf(file, "| ID Struk : %s                                                           |\n", id_pesanan);
    fprintf(file, "==============================================================================\n");
    fprintf(file, "| %-18s | %-13s | %-12s | %-13s |\n", "Nama Barang", "Harga", "Total", "Diskon");
    fprintf(file, "===============================================================================\n");

    for (int i = 0; i < MAX_PRODUCT; i++) {
        if (produk[i].jumlah > 0) {
            int subtotal = produk[i].harga * produk[i].jumlah;
            int diskon_barang = (int)(produk[i].diskon * subtotal);
            fprintf(file, "| %-18s | Rp. %-9d | Rp. %-8d | Rp. %-9d |\n",
                produk[i].nama, produk[i].harga, subtotal, diskon_barang);
        }
    }

    fprintf(file, "===============================================================================\n");
    fprintf(file, "| Total Harga  : Rp. %-57d |\n", total_harga);
    fprintf(file, "| Total Diskon : Rp. %-57d |\n", total_diskon);
    fprintf(file, "| Tagihan      : Rp. %-57d |\n", tagihan);
    fprintf(file, "| Pembayaran   : Rp. %-57d |\n", bayar);
    fprintf(file, "| Kembalian    : Rp. %-57d |\n", bayar - tagihan);
    fclose(file);

    printf("\n>> Struk berhasil dicetak ke file: %s\n", filename);
}

void tampilkan_rekapan(Produk produk[], int *total_harga, int *total_diskon) {
    *total_harga = 0;
    *total_diskon = 0;

    clear_screen();
    printf("============================= REKAPAN PESANAN ===============================\n");
    printf("| No | Jumlah | Nama Barang       | Harga     | Total Harga | Diskon     |\n");
    printf("=============================================================================\n");

    int nomor = 1;
    for (int i = 0; i < MAX_PRODUCT; i++) {
        if (produk[i].jumlah > 0) {
            int subtotal = produk[i].harga * produk[i].jumlah;
            int diskon_barang = (int)(produk[i].diskon * subtotal);

            printf("| %-2d | %-6d | %-17s | Rp.%-6d | Rp.%-8d | Rp.%-7d |\n",
                nomor++, produk[i].jumlah, produk[i].nama, produk[i].harga, subtotal, diskon_barang);

            *total_harga += subtotal;
            *total_diskon += diskon_barang;
        }
    }

    printf("=============================================================================\n");
    printf("Total Harga  = Rp. %-10d\n", *total_harga);
    printf("Total Diskon = Rp. %-10d\n", *total_diskon);
}

void tampilkan_struk_terminal(Produk produk[], int total_harga, int total_diskon, int tagihan, int bayar) {
    char id_pesanan[50];
    buat_id_pesanan(id_pesanan);

    printf("============================================================================\n");
    printf("|                             Toko SKENSA                                  |\n");
    printf("|             Jl. HOS Cokroaminoto No. 84, Denpasar                        |\n");
    printf("|                                BALI                                      |\n");
    printf("|                         Telp: 0816285791                                 |\n");
    printf("| ID Struk : %s                                                        |\n", id_pesanan);
    printf("============================================================================\n");
    printf("| %-18s | %-9s | %-10s | %-9s |\n", "Nama Barang", "Harga", "Total", "Diskon");
    printf("============================================================================\n");

    for (int i = 0; i < MAX_PRODUCT; i++) {
        if (produk[i].jumlah > 0) {
            int subtotal = produk[i].harga * produk[i].jumlah;
            int diskon_barang = (int)(produk[i].diskon * subtotal);
            printf("| %-17s | Rp.%-7d | Rp.%-7d | Rp.%-6d |\n",
                   produk[i].nama, produk[i].harga, subtotal, diskon_barang);
        }
    }

    printf("============================================================================\n");
    printf("| Total Harga  : Rp. %-53d |\n", total_harga);
    printf("| Total Diskon : Rp. %-53d |\n", total_diskon);
    printf("| Tagihan      : Rp. %-53d |\n", tagihan);
    printf("| Pembayaran   : Rp. %-53d |\n", bayar);
    printf("| Kembalian    : Rp. %-53d |\n", bayar - tagihan);
    printf("============================================================================\n");
}

void proses_pembayaran(Produk produk[]) {
    int total_harga, total_diskon;
    tampilkan_rekapan(produk, &total_harga, &total_diskon);

    int tagihan = total_harga - total_diskon;
    int bayar;

    printf("\n>> Total yang harus dibayar: Rp. %-10d\n", tagihan);
    printf(">> Masukkan jumlah pembayaran: Rp. ");
    scanf("%d", &bayar);

    while (bayar < tagihan) {
        printf(">> Uang tidak cukup! Masukkan lagi: Rp. ");
        scanf("%d", &bayar);
    }

    char id_pesanan[50];
    buat_id_pesanan(id_pesanan);

    tampilkan_struk_terminal(produk, total_harga, total_diskon, tagihan, bayar);
    cetak_struk_ke_file(id_pesanan, produk, total_harga, total_diskon, tagihan, bayar);

    printf("\n>> Tekan Enter untuk kembali ke menu...");
    getchar(); getchar();
}

int main() {
    srand(time(NULL));
    int pilihan;

    while (1) {
        clear_screen();
        tampilkan_menu();
        printf("\n>> Pilih menu: ");
        scanf("%d", &pilihan);

        if (pilihan >= 1 && pilihan <= MAX_PRODUCT) {
            int tambahan_jumlah;
            printf(">> Masukkan jumlah untuk %s: ", produk[pilihan - 1].nama);
            scanf("%d", &tambahan_jumlah);

            produk[pilihan - 1].jumlah += tambahan_jumlah;
            produk[pilihan - 1].diskon = hitung_diskon(produk[pilihan - 1].jumlah);
            produk[pilihan - 1].total = produk[pilihan - 1].harga * produk[pilihan - 1].jumlah;

        } else if (pilihan == 99) {
            proses_pembayaran(produk);

        } else if (pilihan == 55) {
            reset_data(produk, MAX_PRODUCT);
            printf(">> Tekan Enter untuk kembali ke menu...");
            getchar(); getchar();

        } else if (pilihan == 0) {
            printf(">> Terima kasih telah berbelanja!\n");
            break;

        } else {
            printf(">> Pilihan tidak valid!\n");
            printf(">> Tekan Enter untuk kembali...");
            getchar(); getchar();
        }
    }
    return 0;
}
