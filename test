#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX_PRODUCTS 5
#define MAX_PANJANG_NAMA 50
#define MAX_PANJANG_FILENAME 100

typedef struct {
    char name[MAX_PANJANG_NAMA];
    int price;
    int quantity;
    float discount;
} Product;

typedef struct {
    char name[MAX_PANJANG_NAMA];
    int quantity;
    int totalPrice;
    float discount;
} Order;

Product products[MAX_PRODUCTS] = {
    {"Buku Tulis", 5000, 0, 0},
    {"Pensil", 2000, 0, 0},
    {"Penghapus", 1000, 0, 0},
    {"Penggaris", 1000, 0, 0},
    {"Bujur Sangkar", 500, 0, 0}
};

Order orders[MAX_PRODUCTS];
int orderCount = 0;

void displayMenu() {
    printf("Selamat datang di Toko SKENSA.\n");
    printf("Silakan pilih barang yang Anda inginkan:\n");
    printf("====================================\n");
    printf("|No.| Barang          | Harga     |\n");
    printf("------------------------------------\n");
    int i;
    for (i = 0; i < MAX_PRODUCTS; i++) {
        printf("| %d | %-15s | Rp.%-6d |\n", i + 1, products[i].name, products[i].price);
    }
    printf("====================================\n");
    printf("99. Struk Pembayaran\n");
    printf("55. Reset pilihan\n");
    printf("00. Keluar\n");
    printf("====================================\n");
}

void calculateDiscount(Order *order) {
    if (order->quantity > 5) {
        order->discount = 0.15 * order->totalPrice;
    } else if (order->quantity > 3) {
        order->discount = 0.10 * order->totalPrice;
    } else {
        order->discount = 0;
    }
}

void addOrder(int productIndex, int quantity) {
    if (productIndex < 0 || productIndex >= MAX_PRODUCTS) {
        printf("Produk tidak valid.\n");
        return;
    }

    orders[orderCount].quantity = quantity;
    strcpy(orders[orderCount].name, products[productIndex].name);
    orders[orderCount].totalPrice = products[productIndex].price * quantity;
    calculateDiscount(&orders[orderCount]);
    orderCount++; 
}

void displayReceipt() {
    float totalPrice = 0, totalDiscount = 0;

    printf("Rekap Pesanan Barang\n");
    printf("============================================================================\n");
    printf("|No.| Jumlah | Nama Barang      | Harga     | Total Harga | Diskon      |\n");
    printf("============================================================================\n");
    int i;
    for (i = 0; i < orderCount; i++) {
        printf("| %d | %-6d | %-16s | Rp.%-6d | Rp.%-8d | Rp.%-8.0f |\n", i + 1, orders[i].quantity, orders[i].name, products[i].price, orders[i].totalPrice, orders[i].discount);
        totalPrice += orders[i].totalPrice;
        totalDiscount += orders[i].discount;
    }
    printf("============================================================================\n");
    printf("Total Harga = Rp.%.0f,-\n", totalPrice);
    printf("Total Diskon = Rp.%.0f,-\n", totalDiscount);
    printf("Total Bayar = Rp.%.0f,-\n", totalPrice - totalDiscount);
    
    float payment, change;
    
    while (1){
        printf("Masukkan uang bayar = ");
        scanf("%f", &payment);
        if(payment < (totalPrice - totalDiscount)){
            printf("Uang yang di bayar tidak mencukupi.\n");
            continue;
        }
        else {
            change = payment - (totalPrice - totalDiscount);
            printf("Kembalian = Rp.%.0f,-\n", change);
            break;
        }
    }
    

    // Save receipt to file
    char filename[MAX_PANJANG_FILENAME];
    time_t now = time(NULL);
    struct tm *t = localtime(&now);
    strftime(filename, sizeof(filename), "struk_%Y%m%d_%H%M%S.txt", t);

    FILE *file = fopen(filename, "w");
    if (file == NULL) {
        printf("Gagal menyimpan struk.\n");
        return;
    }

    fprintf(file, "====================================================================\n");
    fprintf(file, "| Toko SKENSA |\n");
    fprintf(file, "| Jl. HOS Cokroaminoto No. 84, Denpasar |\n");
    fprintf(file, "| Bali |\n");
    fprintf(file, "| Telp : 0816285791 |\n");
    fprintf(file, "| ID Struk : %ld |\n", now);
    fprintf(file, "|==================================================================|\n");
    fprintf(file, "| Nama Barang      | Harga  | Total  | Diskon  |\n");
    fprintf(file, "|==================================================================|\n");
    for (i = 0; i < orderCount; i++) {
        fprintf(file, "| %-15s | Rp.%d | Rp.%-6d | Rp.%-5.0f |\n", orders[i].name, products[i].price, orders[i].totalPrice, orders[i].discount);
    }
    fprintf(file, "|==================================================================|\n");
    fprintf(file, "| Total Harga = Rp.%.0f,- |\n", totalPrice);
    fprintf(file, "| Total Diskon = Rp.%.0f,- |\n", totalDiscount);
    fprintf(file, "| Tagihan = Rp.%.0f,- |\n", totalPrice - totalDiscount);
    fprintf(file, "| Pembayaran = Rp.%.0f,- |\n", payment);
    fprintf(file, "| Kembalian = Rp.%.0f,- |\n", change);
    fprintf(file, "| Waktu/Hari : %s |\n", asctime(t));
    fprintf(file, "====================================================================\n");

    fclose(file);
    printf("Struk berhasil disimpan sebagai %s\n", filename);
}

void resetOrders() {
    orderCount = 0;
    printf("Pesanan telah direset.\n");
}


int main() {
    int choice, quantity;
    
    while (1) {
        displayMenu();
        printf("Input pilihan yang Anda inginkan: ");
        scanf("%d", &choice);

        if (choice == 0) {
            break;
        } else if (choice == 99) {
            displayReceipt();
            orderCount = 0;
                
        } else if (choice == 55) {
            resetOrders();
        } else if (choice >= 1 && choice <= MAX_PRODUCTS) {
            printf("Masukkan jumlah %s yang Anda inginkan: ", products[choice - 1].name);
            scanf("%d", &quantity);
            addOrder(choice - 1, quantity);
        } else {
            printf("Pilihan tidak valid.\n\n\n");
        }
        
    }

    return 0;
}
